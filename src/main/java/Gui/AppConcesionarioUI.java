/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Gui;

/**
 *
 * @author adria
 */

import Model.Comentario;
import Model.ControladorServicio;
import Model.Extra;
import Model.Modelo;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
public class AppConcesionarioUI extends javax.swing.JFrame {

    /**
     * Creates new form AppMainForm
     */
    public AppConcesionarioUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        loginBoton = new javax.swing.JButton();
        botonInicioSesion = new javax.swing.JButton();
        pedidosBoton = new javax.swing.JButton();
        modelList = new java.awt.List();
        catalogoButton = new javax.swing.JButton();
        modelDetails = new java.awt.List();
        comentariosList = new java.awt.List();
        DetailsLabel = new javax.swing.JLabel();
        ComentsLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comentarioTextBox = new javax.swing.JTextField();
        comentButton = new javax.swing.JButton();
        RemoveComent = new javax.swing.JButton();
        editarComentarioButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        buscadorTextBox = new javax.swing.JTextField();
        botonBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Background.setBackground(new java.awt.Color(255, 255, 255));
        Background.setPreferredSize(new java.awt.Dimension(800, 400));

        loginBoton.setText("Iniciar Sesión");
        loginBoton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginBotonMouseClicked(evt);
            }
        });
        loginBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBotonActionPerformed(evt);
            }
        });

        botonInicioSesion.setText("Registrarse");
        botonInicioSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonInicioSesionMouseClicked(evt);
            }
        });
        botonInicioSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInicioSesionActionPerformed(evt);
            }
        });

        pedidosBoton.setText("Pedidos");
        pedidosBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedidosBotonActionPerformed(evt);
            }
        });

        modelList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelListActionPerformed(evt);
            }
        });

        catalogoButton.setText("Mostrar Catalogo");
        catalogoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catalogoButtonActionPerformed(evt);
            }
        });

        modelDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelDetailsActionPerformed(evt);
            }
        });

        comentariosList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comentariosListActionPerformed(evt);
            }
        });

        DetailsLabel.setForeground(new java.awt.Color(0, 0, 0));
        DetailsLabel.setText("Detalles");

        ComentsLabel.setForeground(new java.awt.Color(0, 0, 0));
        ComentsLabel.setText("Comentarios");

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Información de contacto");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Telefono: 928 13 54 60");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Mail: concesionariopaco@gmail.com");

        comentarioTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comentarioTextBoxActionPerformed(evt);
            }
        });

        comentButton.setText("Añadir comentario");
        comentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comentButtonActionPerformed(evt);
            }
        });

        RemoveComent.setText("Eliminar Comentario");
        RemoveComent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveComentActionPerformed(evt);
            }
        });

        editarComentarioButton.setText("Editar comentario");
        editarComentarioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarComentarioButtonActionPerformed(evt);
            }
        });

        ExitButton.setText("Salir y guardar");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addComponent(modelList, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modelDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(ComentsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(comentariosList, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(24, 24, 24))
                                    .addGroup(BackgroundLayout.createSequentialGroup()
                                        .addComponent(buscadorTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(botonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(ExitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                                                .addComponent(editarComentarioButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(BackgroundLayout.createSequentialGroup()
                                                .addComponent(comentarioTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(4, 4, 4)))
                                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(comentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(RemoveComent)))))))
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addComponent(catalogoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(DetailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(405, 405, 405)
                        .addComponent(pedidosBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(loginBoton)
                        .addGap(18, 18, 18)
                        .addComponent(botonInicioSesion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(82, 82, 82))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(catalogoButton))
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(DetailsLabel))
                    .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonInicioSesion)
                        .addComponent(pedidosBoton)
                        .addComponent(loginBoton)))
                .addGap(10, 10, 10)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buscadorTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonBuscar))
                        .addGap(18, 18, 18)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comentarioTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comentButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RemoveComent)
                            .addComponent(editarComentarioButton))
                        .addGap(18, 18, 18)
                        .addComponent(ExitButton)
                        .addGap(35, 35, 35))
                    .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(modelList, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(BackgroundLayout.createSequentialGroup()
                            .addComponent(modelDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(ComentsLabel)
                            .addGap(10, 10, 10)
                            .addComponent(comentariosList, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        // TODO add your handling code here:
        String filtro = buscadorTextBox.getText();
        if(filtro.equals("")) {
            showModelList();
            return;
        }
        modelList.removeAll();
        for(int i=0;i < ControladorServicio.getModelos().size();i++){
            String objetivo = ControladorServicio.getModelos().get(i).getNombre();
            if(filtro.equals(objetivo) || objetivo.contains(filtro)){
                modelList.add(objetivo);
            }
        }
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        try {
            // TODO add your handling code here:
            ControladorServicio.guardarDatos();
            System.exit(0);
        } catch (IOException ex) {
            Logger.getLogger(AppConcesionarioUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void editarComentarioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarComentarioButtonActionPerformed
        // TODO add your handling code here:
        Modelo modelo = ControladorServicio.getModelos().get(modelList.getSelectedIndex());
        Comentario comentario =  modelo.getComentarios().get(comentariosList.getSelectedIndex());
        if(ControladorServicio.getClienteActual().getDni().equals(comentario.getAutorDni())){
            comentario.setComentario(comentarioTextBox.getText());
             showModelComents(ControladorServicio.getModelos().get(modelList.getSelectedIndex()));
        }
        else new errorComentarios().setVisible(true);
    }//GEN-LAST:event_editarComentarioButtonActionPerformed

    private void RemoveComentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveComentActionPerformed
        // TODO add your handling code here:
        Modelo modelo = ControladorServicio.getModelos().get(modelList.getSelectedIndex());
        Comentario comentario = modelo.getComentarios().get(comentariosList.getSelectedIndex());
        if(ControladorServicio.getClienteActual().getDni().equals(comentario.getAutorDni())){
            modelo.getComentarios().remove(comentariosList.getSelectedIndex());
            showModelComents(ControladorServicio.getModelos().get(modelList.getSelectedIndex()));
        }
        else new errorComentarios().setVisible(true);
    }//GEN-LAST:event_RemoveComentActionPerformed

    private void comentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comentButtonActionPerformed
        // TODO add your handling code here:
        String comentario = comentarioTextBox.getText();
        String autorDni = ControladorServicio.getClienteActual().getDni();
        Modelo modelo = ControladorServicio.getModelos().get(modelList.getSelectedIndex());
        modelo.addComentario(comentario, autorDni);
        showModelComents(ControladorServicio.getModelos().get(modelList.getSelectedIndex()));
    }//GEN-LAST:event_comentButtonActionPerformed

    private void comentarioTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comentarioTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comentarioTextBoxActionPerformed

    private void comentariosListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comentariosListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comentariosListActionPerformed

    private void modelDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelDetailsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modelDetailsActionPerformed

    private void catalogoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogoButtonActionPerformed
        // TODO add your handling code here:
        showModelList();
    }//GEN-LAST:event_catalogoButtonActionPerformed

    private void modelListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelListActionPerformed
        // TODO add your handling code here:
        showModelDetails(ControladorServicio.getModelos().get(modelList.getSelectedIndex()));
        showModelComents(ControladorServicio.getModelos().get(modelList.getSelectedIndex()));
    }//GEN-LAST:event_modelListActionPerformed

    private void pedidosBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedidosBotonActionPerformed
        //HAcer q no aparezca hasta haber iniciado sesion
        Pedidos ventanaPedidos = new Pedidos();
        ventanaPedidos.showModelList();
        ventanaPedidos.showPedidosExistentes();
        ventanaPedidos.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_pedidosBotonActionPerformed

    private void botonInicioSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInicioSesionActionPerformed
        // TODO add your handling code here:
        if(ControladorServicio.getClienteActual() == null){
            botonInicioSesion.setVisible(true);
        }else{
            botonInicioSesion.setVisible(false);
        }
    }//GEN-LAST:event_botonInicioSesionActionPerformed

    private void botonInicioSesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonInicioSesionMouseClicked
        // TODO add your handling code here:
        new SignInForm().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_botonInicioSesionMouseClicked

    private void loginBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBotonActionPerformed
        // TODO add your handling code here:
        if(ControladorServicio.getClienteActual() == null){
            loginBoton.setVisible(true);
        }else{
            loginBoton.setVisible(false);
        }
    }//GEN-LAST:event_loginBotonActionPerformed

    private void loginBotonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginBotonMouseClicked
        // TODO add your handling code here:
        new LogInForm().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_loginBotonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppConcesionarioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppConcesionarioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppConcesionarioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppConcesionarioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppConcesionarioUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JLabel ComentsLabel;
    private javax.swing.JLabel DetailsLabel;
    private javax.swing.JButton ExitButton;
    private javax.swing.JButton RemoveComent;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonInicioSesion;
    private javax.swing.JTextField buscadorTextBox;
    private javax.swing.JButton catalogoButton;
    private javax.swing.JButton comentButton;
    private javax.swing.JTextField comentarioTextBox;
    private java.awt.List comentariosList;
    private javax.swing.JButton editarComentarioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loginBoton;
    private java.awt.List modelDetails;
    private java.awt.List modelList;
    private javax.swing.JButton pedidosBoton;
    // End of variables declaration//GEN-END:variables

    private void showModelDetails(Modelo modelo) {
        modelDetails.removeAll();
        modelDetails.add("Modelo: " + modelo.getNombre());
        modelDetails.add("Precio base: " + String.valueOf(modelo.getPrecioBase() + " euros"));
        modelDetails.add("Extras:");
        Extra extra;
        for(int i = 0; i< modelo.getExtras().size();i++){
           extra = modelo.getExtras().get(i);
           modelDetails.add(extra.getNombre());
        }
        modelDetails.add("Motor: " + modelo.getMotor());
        modelDetails.add("Marca: " + modelo.getMarca());
        modelDetails.add("Nº puertas: " + String.valueOf(modelo.getNPuertas()));
    }

    private void showModelList() {
        modelList.removeAll();
        for (Modelo modelo : ControladorServicio.getModelos()) {
            if(modelo.isAnyCars() == null) continue;
            else modelList.add(modelo.getNombre());
        }
    }

    private void showModelComents(Modelo modelo) {
        comentariosList.removeAll();
        for (int i = 0; i < modelo.getComentarios().size() ; i++) {
            comentariosList.add(modelo.getComentarios().get(i).toString());
        }
    }
    
    public void notLoggedIn(){
        pedidosBoton.setVisible(false);
        comentButton.setVisible(false);
        comentarioTextBox.setVisible(false);
        editarComentarioButton.setVisible(false);
        RemoveComent.setVisible(false);
    }
    
    void LoggedIn(){
        pedidosBoton.setVisible(true);
        comentButton.setVisible(true);
        comentarioTextBox.setVisible(true);
        loginBoton.setVisible(false);
        botonInicioSesion.setVisible(false);
        editarComentarioButton.setVisible(true);
        RemoveComent.setVisible(true);
    }
}
